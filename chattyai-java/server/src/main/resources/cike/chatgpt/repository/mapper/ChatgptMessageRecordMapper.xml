<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cike.chatgpt.repository.mapper.ChatgptMessageRecordMapper">
  <resultMap id="BaseResultMap" type="cike.chatgpt.repository.entity.ChatgptMessageRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="once_conversation_id" jdbcType="VARCHAR" property="onceConversationId" />
    <result column="room_id" jdbcType="VARCHAR" property="roomId" />
    <result column="system_message" jdbcType="VARCHAR" property="systemMessage" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="message_id" jdbcType="VARCHAR" property="messageId" />
    <result column="created" jdbcType="BIGINT" property="created" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `uid`, once_conversation_id, room_id, system_message, `role`, content, message_id, 
    created, model, create_time
  </sql>
  <select id="selectByExample" parameterType="cike.chatgpt.repository.entity.ChatgptMessageRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chatgpt_message_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chatgpt_message_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from chatgpt_message_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cike.chatgpt.repository.entity.ChatgptMessageRecordExample">
    delete from chatgpt_message_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cike.chatgpt.repository.entity.ChatgptMessageRecord">
    insert into chatgpt_message_record (id, `uid`, once_conversation_id, 
      room_id, system_message, `role`, 
      content, message_id, created, 
      model, create_time)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=VARCHAR}, #{onceConversationId,jdbcType=VARCHAR}, 
      #{roomId,jdbcType=VARCHAR}, #{systemMessage,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{messageId,jdbcType=VARCHAR}, #{created,jdbcType=BIGINT}, 
      #{model,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cike.chatgpt.repository.entity.ChatgptMessageRecord">
    insert into chatgpt_message_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="onceConversationId != null">
        once_conversation_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="systemMessage != null">
        system_message,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="messageId != null">
        message_id,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="onceConversationId != null">
        #{onceConversationId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="systemMessage != null">
        #{systemMessage,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="messageId != null">
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=BIGINT},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cike.chatgpt.repository.entity.ChatgptMessageRecordExample" resultType="java.lang.Long">
    select count(*) from chatgpt_message_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chatgpt_message_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.onceConversationId != null">
        once_conversation_id = #{record.onceConversationId,jdbcType=VARCHAR},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=VARCHAR},
      </if>
      <if test="record.systemMessage != null">
        system_message = #{record.systemMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        `role` = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=BIGINT},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chatgpt_message_record
    set id = #{record.id,jdbcType=BIGINT},
      `uid` = #{record.uid,jdbcType=VARCHAR},
      once_conversation_id = #{record.onceConversationId,jdbcType=VARCHAR},
      room_id = #{record.roomId,jdbcType=VARCHAR},
      system_message = #{record.systemMessage,jdbcType=VARCHAR},
      `role` = #{record.role,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      message_id = #{record.messageId,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=BIGINT},
      model = #{record.model,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cike.chatgpt.repository.entity.ChatgptMessageRecord">
    update chatgpt_message_record
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="onceConversationId != null">
        once_conversation_id = #{onceConversationId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="systemMessage != null">
        system_message = #{systemMessage,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=BIGINT},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cike.chatgpt.repository.entity.ChatgptMessageRecord">
    update chatgpt_message_record
    set `uid` = #{uid,jdbcType=VARCHAR},
      once_conversation_id = #{onceConversationId,jdbcType=VARCHAR},
      room_id = #{roomId,jdbcType=VARCHAR},
      system_message = #{systemMessage,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      message_id = #{messageId,jdbcType=VARCHAR},
      created = #{created,jdbcType=BIGINT},
      model = #{model,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>